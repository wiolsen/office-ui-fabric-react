<div id="main">
  <div class="loading">
    <img
      class="loadingImage"
      src="https://static2.sharepointonline.com/files/fabric/fabric-website/images/spinner.gif"
      alt="Loading"
      width="32"
      height="32"
    />
  </div>
</div>

<script type="text/javascript">
  var devhost = getParameterByName('devhost');
  var entryPointFilename = 'fabric-sitev5';
  var appPath = '';
  var Flight = {};

  // Update as new fabric versions and its documentation are supported
  var fabricVersions = [5, 6];

  // Get fabricVer from URL param, session value, or latest version in array
  var fabricVersion = Number(
    getParameterByName('fabricVer') || window.sessionStorage.getItem('fabricVer') || fabricVersions[fabricVersions.length - 1]
  );

  // Set session value if it's in array
  if (fabricVersions.indexOf(fabricVersion) > -1) {
    window.sessionStorage.setItem('fabricVer', fabricVersion);
  }

  if (devhost !== null) {
    if (devhost === '') {
      var loc = window.location;
      devhost = loc.protocol + '//' + loc.host + loc.pathname.replace('homepage.htm', '');
    }
    appPath = devhost;
    Flight.baseCDNUrl = devhost;
    loadAppScripts(appPath);
  } else {
    var prefixVer =
      fabricVersions.indexOf(fabricVersion) > -1 && fabricVersion !== fabricVersions.slice(-1)[0] ? 'v' + fabricVersion + '-' : '';

    var configPrefix = 'fabric-website-' + prefixVer + 'df';

    if (location.hostname === 'developer.microsoft.com') {
      configPrefix = 'fabric-website-' + prefixVer + 'prod';
    }

    var configScript = ['https://fabricweb.azureedge.net/fabric-website/manifests/' + configPrefix + '.js'];

    loadScripts(configScript, function() {
      if (window.Flight) {
        appPath += window.Flight.baseCDNUrl;

        loadAppScripts(appPath);
      }
    });
  }

  // Simple synchronous script loader with callback. Adapted from https://stackoverflow.com/questions/1866717
  function loadScripts(array, callback) {
    var loader = function(src, handler, failHandler) {
      var script = document.createElement('script');
      script.src = src;
      script.onload = script.onreadystatechange = function() {
        script.onreadystatechange = script.onload = null;
        handler();
      };

      script.onerror = function() {
        script.onerror = null;
        if (failHandler) {
          failHandler();
        }
      };

      var head = document.getElementsByTagName('head')[0];
      (head || document.body).appendChild(script);
    };
    (function run() {
      if (array.length != 0) {
        const scriptName = array.shift();
        loader(scriptName, run, () => {
          loader(scriptName.replace('.min.js', '.js'), run);
        });
      } else {
        callback && callback();
      }
    })();
  }

  function loadAppScripts(appPath) {
    var scripts = [appPath + entryPointFilename + '.min.js'];

    if (!window.React) {
      var reactPath = '//cdnjs.cloudflare.com/ajax/libs/react/16.8.6/umd/react';
      var reactDomPath = '//cdnjs.cloudflare.com/ajax/libs/react-dom/16.8.6/umd/react-dom';

      reactPath = reactPath + '.production.min.js';
      reactDomPath = reactDomPath + '.production.min.js';

      scripts.unshift(reactDomPath);
      scripts.unshift(reactPath);
    }

    loadScripts(scripts);
  }

  function getParameterByName(name, url) {
    if (!url) {
      url = window.location.href;
    }
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
      results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
  }
</script>
