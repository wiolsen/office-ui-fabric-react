// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Image.MaximizeFrame.Example.tsx correctly 1`] = `
<div>
  <p>
    Where the exact width and height of the image's frame is not known, such as when sizing an image as a percentage of its parent, you can use the "maximizeFrame" prop to expand the frame to fill the parent element.
  </p>
  <label
    className=
        ms-Label
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          box-shadow: none;
          box-sizing: border-box;
          color: #323130;
          display: block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 600;
          margin-bottom: 0px;
          margin-left: 0px;
          margin-right: 0px;
          margin-top: 0px;
          overflow-wrap: break-word;
          padding-bottom: 5px;
          padding-left: 0;
          padding-right: 0;
          padding-top: 5px;
          word-wrap: break-word;
        }
  >
    The image is placed within a landscape container.
  </label>
  <div
    style={
      Object {
        "height": "100px",
        "width": "200px",
      }
    }
  >
    <div
      className=
          ms-Image
          ms-Image--maximizeFrame
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            height: 100%;
            overflow: hidden;
            position: relative;
            width: 100%;
          }
      style={
        Object {
          "height": undefined,
          "width": undefined,
        }
      }
    >
      <img
        alt="Example implementation of the property maximize frame with a landscape container."
        className=
            ms-Image-image
            ms-Image-image--cover
            ms-Image-image--portrait
            is-notLoaded
            is-fadeIn
            {
              display: block;
              height: 100%;
              left: 50% /* @noflip */;
              object-fit: cover;
              opacity: 0;
              position: absolute;
              top: 50%;
              transform: translate(-50%,-50%);
              width: 100%;
            }
        onError={[Function]}
        onLoad={[Function]}
        src="http://placehold.it/500x500"
      />
    </div>
  </div>
  <br />
  <label
    className=
        ms-Label
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          box-shadow: none;
          box-sizing: border-box;
          color: #323130;
          display: block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 600;
          margin-bottom: 0px;
          margin-left: 0px;
          margin-right: 0px;
          margin-top: 0px;
          overflow-wrap: break-word;
          padding-bottom: 5px;
          padding-left: 0;
          padding-right: 0;
          padding-top: 5px;
          word-wrap: break-word;
        }
  >
    The image is placed within a portrait container.
  </label>
  <div
    style={
      Object {
        "height": "200px",
        "width": "100px",
      }
    }
  >
    <div
      className=
          ms-Image
          ms-Image--maximizeFrame
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            height: 100%;
            overflow: hidden;
            position: relative;
            width: 100%;
          }
      style={
        Object {
          "height": undefined,
          "width": undefined,
        }
      }
    >
      <img
        alt="Example implementation of the property maximize frame with a portrait container"
        className=
            ms-Image-image
            ms-Image-image--cover
            ms-Image-image--portrait
            is-notLoaded
            is-fadeIn
            {
              display: block;
              height: 100%;
              left: 50% /* @noflip */;
              object-fit: cover;
              opacity: 0;
              position: absolute;
              top: 50%;
              transform: translate(-50%,-50%);
              width: 100%;
            }
        onError={[Function]}
        onLoad={[Function]}
        src="http://placehold.it/500x500"
      />
    </div>
  </div>
</div>
`;
