// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders TextField.OnRenderDescription.Example.tsx correctly 1`] = `
<div
  className="docs-TextFieldExample"
>
  <div
    className=
        ms-TextField
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          box-shadow: none;
          box-sizing: border-box;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          margin-bottom: 0px;
          margin-left: 0px;
          margin-right: 0px;
          margin-top: 0px;
          padding-bottom: 0px;
          padding-left: 0px;
          padding-right: 0px;
          padding-top: 0px;
          position: relative;
        }
  >
    <div
      className=
          ms-TextField-wrapper

    >
      <div
        className=
            ms-TextField-fieldGroup
            {
              align-items: stretch;
              background: #ffffff;
              border-radius: 2px;
              border: 1px solid #a19f9d;
              box-shadow: none;
              box-sizing: border-box;
              cursor: text;
              display: flex;
              flex-direction: row;
              height: 32px;
              margin-bottom: 0px;
              margin-left: 0px;
              margin-right: 0px;
              margin-top: 0px;
              padding-bottom: 0px;
              padding-left: 0px;
              padding-right: 0px;
              padding-top: 0px;
              position: relative;
            }
            &:hover {
              border-color: #323130;
            }
            @media screen and (-ms-high-contrast: active){&:hover {
              border-color: Highlight;
            }
      >
        <input
          aria-describedby="TextFieldDescription1"
          aria-invalid={false}
          className=
              ms-TextField-field
              {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                background-color: transparent;
                background: none;
                border-radius: 0px;
                border: none;
                box-shadow: none;
                box-sizing: border-box;
                color: #323130;
                font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                font-size: 14px;
                font-weight: 400;
                margin-bottom: 0px;
                margin-left: 0px;
                margin-right: 0px;
                margin-top: 0px;
                min-width: 0px;
                outline: 0px;
                padding-bottom: 0;
                padding-left: 8px;
                padding-right: 8px;
                padding-top: 0;
                text-overflow: ellipsis;
                width: 100%;
              }
              &:active, &:focus, &:hover {
                outline: 0px;
              }
              &::-ms-clear {
                display: none;
              }
              &::placeholder {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                color: #605e5c;
                font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                font-size: 14px;
                font-weight: 400;
                opacity: 1;
              }
              &:-ms-input-placeholder {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                color: #605e5c;
                font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
                font-size: 14px;
                font-weight: 400;
                opacity: 1;
              }
          id="TextField0"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
    <span
      id="TextFieldDescription1"
    >
      <div>
        A custom description that appends a link.
         
        <a
          href="#"
          onClick={[Function]}
        >
          Link
        </a>
      </div>
      
    </span>
  </div>
</div>
`;
